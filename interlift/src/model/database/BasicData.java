package model.database;

// Generated 23-may-2014 15:32:55 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * BasicData generated by hbm2java
 */
@Entity
@Table(name = "basic_data", schema = "public")
public class BasicData implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4034095629794094708L;
	private int idBasic;
	private BasicData basicData;
	private String dataBaseName;
	private String name;
	private String field;
	private boolean editable;
	private int priority;
	private String imageurl;
	private char status;
	private Set<SaleSummary> saleSummariesForDoorSystem = new HashSet<SaleSummary>(0);
	private Set<SaleSummary> saleSummariesForDoorType = new HashSet<SaleSummary>(0);
	private Set<SaleSummary> saleSummariesForFan = new HashSet<SaleSummary>(0);
	private Set<SaleSummary> saleSummariesForRoofType = new HashSet<SaleSummary>(0);
	private Set<SaleSummary> saleSummariesForCabinDesign = new HashSet<SaleSummary>(0);
	private Set<SaleSummary> saleSummariesForManeuverType = new HashSet<SaleSummary>(0);
	private Set<Quotation> quotationsForElectricityType = new HashSet<Quotation>(0);
	private Set<SaleSummary> saleSummariesForFloorType = new HashSet<SaleSummary>(0);
	private Set<Quotation> quotationsForRailing = new HashSet<Quotation>(0);
	private Set<SaleSummary> saleSummariesForMirror = new HashSet<SaleSummary>(0);
	private Set<Quotation> quotationsForRoofType = new HashSet<Quotation>(0);
	private Set<SaleSummary> saleSummariesForRailing = new HashSet<SaleSummary>(0);
	private Set<Quotation> quotationsForFloorType = new HashSet<Quotation>(0);
	private Set<SaleSummary> saleSummariesForButtonType = new HashSet<SaleSummary>(0);
	private Set<Quotation> quotationsForDoorType = new HashSet<Quotation>(0);
	private Set<Budget> budgetsForHeight = new HashSet<Budget>(0);
	private Set<SaleSummary> saleSummariesForElevatorType = new HashSet<SaleSummary>(0);
	private Set<Budget> budgetsForFreeAdmission = new HashSet<Budget>(0);
	private Set<SaleSummary> saleSummariesForMachineBase = new HashSet<SaleSummary>(0);
	private Set<SaleSummary> saleSummariesForMachineType = new HashSet<SaleSummary>(0);
	private Set<SaleSummary> saleSummariesForElectricityType = new HashSet<SaleSummary>(0);
	private Set<SaleSummary> saleSummariesForAccess = new HashSet<SaleSummary>(0);
	private Set<SaleSummary> saleSummariesForFrequency = new HashSet<SaleSummary>(0);
	private Set<Quotation> quotationsForElevatorType = new HashSet<Quotation>(0);
	private Set<SaleSummary> saleSummariesForSpeed = new HashSet<SaleSummary>(0);
	private Set<SaleSummary> saleSummariesForHourMachine = new HashSet<SaleSummary>(0);
	private Set<SaleSummary> saleSummariesForVoltageLighting = new HashSet<SaleSummary>(0);
	private Set<Budget> budgetsForSpeed = new HashSet<Budget>(0);
	private Set<Item> items = new HashSet<Item>(0);
	private Set<Item> items_1 = new HashSet<Item>(0);
	private Set<Quotation> quotationsForCabinDesign = new HashSet<Quotation>(0);
	private Set<Quotation> quotationsForQuotationType = new HashSet<Quotation>(0);
	private Set<Budget> budgetsForFloorType = new HashSet<Budget>(0);
	private Set<Quotation> quotationsForCabinModel = new HashSet<Quotation>(0);
	private Set<Budget> budgetsForDoorSystem = new HashSet<Budget>(0);
	private Set<Quotation> quotationsForMirror = new HashSet<Quotation>(0);
	private Set<Budget> budgetsForDoorframeType = new HashSet<Budget>(0);
	private Set<Quotation> quotationsForDoorFrameHammered = new HashSet<Quotation>(0);
	private Set<Budget> budgetsForControlType = new HashSet<Budget>(0);
	private Set<Quotation> quotationsForHeight = new HashSet<Quotation>(0);
	private Set<Budget> budgetsForBoothButton = new HashSet<Budget>(0);
	private Set<Quotation> quotationsForFreeAdmission = new HashSet<Quotation>(0);
	private Set<Budget> budgetsForBoothDisplay = new HashSet<Budget>(0);
	private Set<Budget> budgetsForFloorDisplay = new HashSet<Budget>(0);
	private Set<Quotation> quotationsForDoorframeType = new HashSet<Quotation>(0);
	private Set<Budget> budgetsForFan = new HashSet<Budget>(0);
	private Set<Budget> budgetsForDoorType = new HashSet<Budget>(0);
	private Set<SaleSummary> saleSummariesForCabinModel = new HashSet<SaleSummary>(0);
	private Set<Budget> budgetsForVoltageLighting = new HashSet<Budget>(0);
	private Set<Budget> budgetsForFrequency = new HashSet<Budget>(0);
	private Set<Budget> budgetsForHourMachine = new HashSet<Budget>(0);
	private Set<SaleSummary> saleSummariesForBuildingType = new HashSet<SaleSummary>(0);
	private Set<SaleSummary> saleSummariesForElevatorCapacitance = new HashSet<SaleSummary>(0);
	private Set<Budget> budgetsForMirror = new HashSet<Budget>(0);
	private Set<Budget> budgetsForRailing = new HashSet<Budget>(0);
	private Set<Budget> budgetsForButtonType = new HashSet<Budget>(0);
	private Set<Budget> budgetsForRoofType = new HashSet<Budget>(0);
	private Set<Budget> budgetsForCabinDesign = new HashSet<Budget>(0);
	private Set<Budget> budgetsForManeuverType = new HashSet<Budget>(0);
	private Set<Budget> budgetsForHallButton = new HashSet<Budget>(0);
	private Set<SaleSummary> saleSummariesForBoothButton = new HashSet<SaleSummary>(0);
	private Set<SaleSummary> saleSummariesForBoothDisplay = new HashSet<SaleSummary>(0);
	private Set<SaleSummary> saleSummariesForFloorDisplay = new HashSet<SaleSummary>(0);
	private Set<SaleSummary> saleSummariesForDoorFrameHammered = new HashSet<SaleSummary>(0);
	private Set<BasicData> basicDatas = new HashSet<BasicData>(0);
	private Set<SaleSummary> saleSummariesForDoorframeType = new HashSet<SaleSummary>(0);
	private Set<SaleSummary> saleSummariesForHeight = new HashSet<SaleSummary>(0);
	private Set<SaleSummary> saleSummariesForFreeAdmission = new HashSet<SaleSummary>(0);
	private Set<SaleSummary> saleSummariesForControlType = new HashSet<SaleSummary>(0);
	private Set<SaleSummary> saleSummariesForHallButton = new HashSet<SaleSummary>(0);
	private Set<Quotation> quotationsForFloorDisplay = new HashSet<Quotation>(0);
	private Set<Budget> budgetsForBuildingType = new HashSet<Budget>(0);
	private Set<Quotation> quotationsForBoothDisplay = new HashSet<Quotation>(0);
	private Set<Budget> budgetsForElevatorType = new HashSet<Budget>(0);
	private Set<Quotation> quotationsForControlType = new HashSet<Quotation>(0);
	private Set<Budget> budgetsForElevatorCapacitance = new HashSet<Budget>(0);
	private Set<Budget> budgetsForDoorFrameHammered = new HashSet<Budget>(0);
	private Set<Budget> budgetsForMachineType = new HashSet<Budget>(0);
	private Set<Budget> budgetsForAccess = new HashSet<Budget>(0);
	private Set<Quotation> quotationsForMachineType = new HashSet<Quotation>(0);
	private Set<Quotation> quotationsForHallButton = new HashSet<Quotation>(0);
	private Set<Budget> budgetsForCabinModel = new HashSet<Budget>(0);
	private Set<Budget> budgetsForElectricityType = new HashSet<Budget>(0);
	private Set<Quotation> quotationsForManeuverType = new HashSet<Quotation>(0);
	private Set<Budget> budgetsForMachineBase = new HashSet<Budget>(0);
	private Set<Quotation> quotationsForSpeed = new HashSet<Quotation>(0);
	private Set<Quotation> quotationsForElevatorCapacitance = new HashSet<Quotation>(0);

	public BasicData() {
	}

	public BasicData(int idBasic, String dataBaseName, String name, String field, boolean editable, int priority, char status) {
		this.idBasic = idBasic;
		this.dataBaseName = dataBaseName;
		this.name = name;
		this.field = field;
		this.editable = editable;
		this.priority = priority;
		this.status = status;
	}

	public BasicData(int idBasic, BasicData basicData, String dataBaseName, String name, String field, boolean editable, int priority, String imageurl, char status, Set<SaleSummary> saleSummariesForDoorSystem, Set<SaleSummary> saleSummariesForDoorType, Set<SaleSummary> saleSummariesForFan, Set<SaleSummary> saleSummariesForRoofType, Set<SaleSummary> saleSummariesForCabinDesign, Set<SaleSummary> saleSummariesForManeuverType, Set<Quotation> quotationsForElectricityType, Set<SaleSummary> saleSummariesForFloorType, Set<Quotation> quotationsForRailing, Set<SaleSummary> saleSummariesForMirror, Set<Quotation> quotationsForRoofType, Set<SaleSummary> saleSummariesForRailing, Set<Quotation> quotationsForFloorType, Set<SaleSummary> saleSummariesForButtonType, Set<Quotation> quotationsForDoorType, Set<Budget> budgetsForHeight, Set<SaleSummary> saleSummariesForElevatorType, Set<Budget> budgetsForFreeAdmission, Set<SaleSummary> saleSummariesForMachineBase, Set<SaleSummary> saleSummariesForMachineType, Set<SaleSummary> saleSummariesForElectricityType, Set<SaleSummary> saleSummariesForAccess, Set<SaleSummary> saleSummariesForFrequency, Set<Quotation> quotationsForElevatorType, Set<SaleSummary> saleSummariesForSpeed, Set<SaleSummary> saleSummariesForHourMachine, Set<SaleSummary> saleSummariesForVoltageLighting, Set<Budget> budgetsForSpeed, Set<Item> items, Set<Item> items_1, Set<Quotation> quotationsForCabinDesign, Set<Quotation> quotationsForQuotationType, Set<Budget> budgetsForFloorType, Set<Quotation> quotationsForCabinModel, Set<Budget> budgetsForDoorSystem, Set<Quotation> quotationsForMirror, Set<Budget> budgetsForDoorframeType, Set<Quotation> quotationsForDoorFrameHammered, Set<Budget> budgetsForControlType, Set<Quotation> quotationsForHeight, Set<Budget> budgetsForBoothButton, Set<Quotation> quotationsForFreeAdmission, Set<Budget> budgetsForBoothDisplay, Set<Budget> budgetsForFloorDisplay, Set<Quotation> quotationsForDoorframeType, Set<Budget> budgetsForFan, Set<Budget> budgetsForDoorType, Set<SaleSummary> saleSummariesForCabinModel, Set<Budget> budgetsForVoltageLighting, Set<Budget> budgetsForFrequency, Set<Budget> budgetsForHourMachine, Set<SaleSummary> saleSummariesForBuildingType, Set<SaleSummary> saleSummariesForElevatorCapacitance, Set<Budget> budgetsForMirror, Set<Budget> budgetsForRailing, Set<Budget> budgetsForButtonType, Set<Budget> budgetsForRoofType, Set<Budget> budgetsForCabinDesign, Set<Budget> budgetsForManeuverType, Set<Budget> budgetsForHallButton, Set<SaleSummary> saleSummariesForBoothButton, Set<SaleSummary> saleSummariesForBoothDisplay, Set<SaleSummary> saleSummariesForFloorDisplay, Set<SaleSummary> saleSummariesForDoorFrameHammered, Set<BasicData> basicDatas, Set<SaleSummary> saleSummariesForDoorframeType, Set<SaleSummary> saleSummariesForHeight, Set<SaleSummary> saleSummariesForFreeAdmission, Set<SaleSummary> saleSummariesForControlType, Set<SaleSummary> saleSummariesForHallButton, Set<Quotation> quotationsForFloorDisplay, Set<Budget> budgetsForBuildingType, Set<Quotation> quotationsForBoothDisplay, Set<Budget> budgetsForElevatorType, Set<Quotation> quotationsForControlType, Set<Budget> budgetsForElevatorCapacitance, Set<Budget> budgetsForDoorFrameHammered, Set<Budget> budgetsForMachineType, Set<Budget> budgetsForAccess, Set<Quotation> quotationsForMachineType, Set<Quotation> quotationsForHallButton, Set<Budget> budgetsForCabinModel, Set<Budget> budgetsForElectricityType, Set<Quotation> quotationsForManeuverType, Set<Budget> budgetsForMachineBase, Set<Quotation> quotationsForSpeed, Set<Quotation> quotationsForElevatorCapacitance) {
		this.idBasic = idBasic;
		this.basicData = basicData;
		this.dataBaseName = dataBaseName;
		this.name = name;
		this.field = field;
		this.editable = editable;
		this.priority = priority;
		this.imageurl = imageurl;
		this.status = status;
		this.saleSummariesForDoorSystem = saleSummariesForDoorSystem;
		this.saleSummariesForDoorType = saleSummariesForDoorType;
		this.saleSummariesForFan = saleSummariesForFan;
		this.saleSummariesForRoofType = saleSummariesForRoofType;
		this.saleSummariesForCabinDesign = saleSummariesForCabinDesign;
		this.saleSummariesForManeuverType = saleSummariesForManeuverType;
		this.quotationsForElectricityType = quotationsForElectricityType;
		this.saleSummariesForFloorType = saleSummariesForFloorType;
		this.quotationsForRailing = quotationsForRailing;
		this.saleSummariesForMirror = saleSummariesForMirror;
		this.quotationsForRoofType = quotationsForRoofType;
		this.saleSummariesForRailing = saleSummariesForRailing;
		this.quotationsForFloorType = quotationsForFloorType;
		this.saleSummariesForButtonType = saleSummariesForButtonType;
		this.quotationsForDoorType = quotationsForDoorType;
		this.budgetsForHeight = budgetsForHeight;
		this.saleSummariesForElevatorType = saleSummariesForElevatorType;
		this.budgetsForFreeAdmission = budgetsForFreeAdmission;
		this.saleSummariesForMachineBase = saleSummariesForMachineBase;
		this.saleSummariesForMachineType = saleSummariesForMachineType;
		this.saleSummariesForElectricityType = saleSummariesForElectricityType;
		this.saleSummariesForAccess = saleSummariesForAccess;
		this.saleSummariesForFrequency = saleSummariesForFrequency;
		this.quotationsForElevatorType = quotationsForElevatorType;
		this.saleSummariesForSpeed = saleSummariesForSpeed;
		this.saleSummariesForHourMachine = saleSummariesForHourMachine;
		this.saleSummariesForVoltageLighting = saleSummariesForVoltageLighting;
		this.budgetsForSpeed = budgetsForSpeed;
		this.items = items;
		this.items_1 = items_1;
		this.quotationsForCabinDesign = quotationsForCabinDesign;
		this.quotationsForQuotationType = quotationsForQuotationType;
		this.budgetsForFloorType = budgetsForFloorType;
		this.quotationsForCabinModel = quotationsForCabinModel;
		this.budgetsForDoorSystem = budgetsForDoorSystem;
		this.quotationsForMirror = quotationsForMirror;
		this.budgetsForDoorframeType = budgetsForDoorframeType;
		this.quotationsForDoorFrameHammered = quotationsForDoorFrameHammered;
		this.budgetsForControlType = budgetsForControlType;
		this.quotationsForHeight = quotationsForHeight;
		this.budgetsForBoothButton = budgetsForBoothButton;
		this.quotationsForFreeAdmission = quotationsForFreeAdmission;
		this.budgetsForBoothDisplay = budgetsForBoothDisplay;
		this.budgetsForFloorDisplay = budgetsForFloorDisplay;
		this.quotationsForDoorframeType = quotationsForDoorframeType;
		this.budgetsForFan = budgetsForFan;
		this.budgetsForDoorType = budgetsForDoorType;
		this.saleSummariesForCabinModel = saleSummariesForCabinModel;
		this.budgetsForVoltageLighting = budgetsForVoltageLighting;
		this.budgetsForFrequency = budgetsForFrequency;
		this.budgetsForHourMachine = budgetsForHourMachine;
		this.saleSummariesForBuildingType = saleSummariesForBuildingType;
		this.saleSummariesForElevatorCapacitance = saleSummariesForElevatorCapacitance;
		this.budgetsForMirror = budgetsForMirror;
		this.budgetsForRailing = budgetsForRailing;
		this.budgetsForButtonType = budgetsForButtonType;
		this.budgetsForRoofType = budgetsForRoofType;
		this.budgetsForCabinDesign = budgetsForCabinDesign;
		this.budgetsForManeuverType = budgetsForManeuverType;
		this.budgetsForHallButton = budgetsForHallButton;
		this.saleSummariesForBoothButton = saleSummariesForBoothButton;
		this.saleSummariesForBoothDisplay = saleSummariesForBoothDisplay;
		this.saleSummariesForFloorDisplay = saleSummariesForFloorDisplay;
		this.saleSummariesForDoorFrameHammered = saleSummariesForDoorFrameHammered;
		this.basicDatas = basicDatas;
		this.saleSummariesForDoorframeType = saleSummariesForDoorframeType;
		this.saleSummariesForHeight = saleSummariesForHeight;
		this.saleSummariesForFreeAdmission = saleSummariesForFreeAdmission;
		this.saleSummariesForControlType = saleSummariesForControlType;
		this.saleSummariesForHallButton = saleSummariesForHallButton;
		this.quotationsForFloorDisplay = quotationsForFloorDisplay;
		this.budgetsForBuildingType = budgetsForBuildingType;
		this.quotationsForBoothDisplay = quotationsForBoothDisplay;
		this.budgetsForElevatorType = budgetsForElevatorType;
		this.quotationsForControlType = quotationsForControlType;
		this.budgetsForElevatorCapacitance = budgetsForElevatorCapacitance;
		this.budgetsForDoorFrameHammered = budgetsForDoorFrameHammered;
		this.budgetsForMachineType = budgetsForMachineType;
		this.budgetsForAccess = budgetsForAccess;
		this.quotationsForMachineType = quotationsForMachineType;
		this.quotationsForHallButton = quotationsForHallButton;
		this.budgetsForCabinModel = budgetsForCabinModel;
		this.budgetsForElectricityType = budgetsForElectricityType;
		this.quotationsForManeuverType = quotationsForManeuverType;
		this.budgetsForMachineBase = budgetsForMachineBase;
		this.quotationsForSpeed = quotationsForSpeed;
		this.quotationsForElevatorCapacitance = quotationsForElevatorCapacitance;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "basic_seq")
	@SequenceGenerator(name = "basic_seq", sequenceName = "basic_data_idbasic_seq")
	@Column(name = "id_basic", unique = true, nullable = false)
	public int getIdBasic() {
		return this.idBasic;
	}

	public void setIdBasic(int idBasic) {
		this.idBasic = idBasic;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_id_basic")
	public BasicData getBasicData() {
		return this.basicData;
	}

	public void setBasicData(BasicData basicData) {
		this.basicData = basicData;
	}

	@Column(name = "data_base_name", nullable = false, length = 50)
	public String getDataBaseName() {
		return this.dataBaseName;
	}

	public void setDataBaseName(String dataBaseName) {
		this.dataBaseName = dataBaseName;
	}

	@Column(name = "name", nullable = false, length = 1500)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "field", nullable = false, length = 300)
	public String getField() {
		return this.field;
	}

	public void setField(String field) {
		this.field = field;
	}

	@Column(name = "editable", nullable = false)
	public boolean isEditable() {
		return this.editable;
	}

	public void setEditable(boolean editable) {
		this.editable = editable;
	}

	@Column(name = "priority", nullable = false)
	public int getPriority() {
		return this.priority;
	}

	public void setPriority(int priority) {
		this.priority = priority;
	}

	@Column(name = "imageurl", length = 150)
	public String getImageurl() {
		return this.imageurl;
	}

	public void setImageurl(String imageurl) {
		this.imageurl = imageurl;
	}

	@Column(name = "status", nullable = false, length = 1)
	public char getStatus() {
		return this.status;
	}

	public void setStatus(char status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByDoorSystem")
	public Set<SaleSummary> getSaleSummariesForDoorSystem() {
		return this.saleSummariesForDoorSystem;
	}

	public void setSaleSummariesForDoorSystem(Set<SaleSummary> saleSummariesForDoorSystem) {
		this.saleSummariesForDoorSystem = saleSummariesForDoorSystem;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByDoorType")
	public Set<SaleSummary> getSaleSummariesForDoorType() {
		return this.saleSummariesForDoorType;
	}

	public void setSaleSummariesForDoorType(Set<SaleSummary> saleSummariesForDoorType) {
		this.saleSummariesForDoorType = saleSummariesForDoorType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByFan")
	public Set<SaleSummary> getSaleSummariesForFan() {
		return this.saleSummariesForFan;
	}

	public void setSaleSummariesForFan(Set<SaleSummary> saleSummariesForFan) {
		this.saleSummariesForFan = saleSummariesForFan;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByRoofType")
	public Set<SaleSummary> getSaleSummariesForRoofType() {
		return this.saleSummariesForRoofType;
	}

	public void setSaleSummariesForRoofType(Set<SaleSummary> saleSummariesForRoofType) {
		this.saleSummariesForRoofType = saleSummariesForRoofType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByCabinDesign")
	public Set<SaleSummary> getSaleSummariesForCabinDesign() {
		return this.saleSummariesForCabinDesign;
	}

	public void setSaleSummariesForCabinDesign(Set<SaleSummary> saleSummariesForCabinDesign) {
		this.saleSummariesForCabinDesign = saleSummariesForCabinDesign;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByManeuverType")
	public Set<SaleSummary> getSaleSummariesForManeuverType() {
		return this.saleSummariesForManeuverType;
	}

	public void setSaleSummariesForManeuverType(Set<SaleSummary> saleSummariesForManeuverType) {
		this.saleSummariesForManeuverType = saleSummariesForManeuverType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByElectricityType")
	public Set<Quotation> getQuotationsForElectricityType() {
		return this.quotationsForElectricityType;
	}

	public void setQuotationsForElectricityType(Set<Quotation> quotationsForElectricityType) {
		this.quotationsForElectricityType = quotationsForElectricityType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByFloorType")
	public Set<SaleSummary> getSaleSummariesForFloorType() {
		return this.saleSummariesForFloorType;
	}

	public void setSaleSummariesForFloorType(Set<SaleSummary> saleSummariesForFloorType) {
		this.saleSummariesForFloorType = saleSummariesForFloorType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByRailing")
	public Set<Quotation> getQuotationsForRailing() {
		return this.quotationsForRailing;
	}

	public void setQuotationsForRailing(Set<Quotation> quotationsForRailing) {
		this.quotationsForRailing = quotationsForRailing;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByMirror")
	public Set<SaleSummary> getSaleSummariesForMirror() {
		return this.saleSummariesForMirror;
	}

	public void setSaleSummariesForMirror(Set<SaleSummary> saleSummariesForMirror) {
		this.saleSummariesForMirror = saleSummariesForMirror;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByRoofType")
	public Set<Quotation> getQuotationsForRoofType() {
		return this.quotationsForRoofType;
	}

	public void setQuotationsForRoofType(Set<Quotation> quotationsForRoofType) {
		this.quotationsForRoofType = quotationsForRoofType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByRailing")
	public Set<SaleSummary> getSaleSummariesForRailing() {
		return this.saleSummariesForRailing;
	}

	public void setSaleSummariesForRailing(Set<SaleSummary> saleSummariesForRailing) {
		this.saleSummariesForRailing = saleSummariesForRailing;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByFloorType")
	public Set<Quotation> getQuotationsForFloorType() {
		return this.quotationsForFloorType;
	}

	public void setQuotationsForFloorType(Set<Quotation> quotationsForFloorType) {
		this.quotationsForFloorType = quotationsForFloorType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByButtonType")
	public Set<SaleSummary> getSaleSummariesForButtonType() {
		return this.saleSummariesForButtonType;
	}

	public void setSaleSummariesForButtonType(Set<SaleSummary> saleSummariesForButtonType) {
		this.saleSummariesForButtonType = saleSummariesForButtonType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByDoorType")
	public Set<Quotation> getQuotationsForDoorType() {
		return this.quotationsForDoorType;
	}

	public void setQuotationsForDoorType(Set<Quotation> quotationsForDoorType) {
		this.quotationsForDoorType = quotationsForDoorType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByHeight")
	public Set<Budget> getBudgetsForHeight() {
		return this.budgetsForHeight;
	}

	public void setBudgetsForHeight(Set<Budget> budgetsForHeight) {
		this.budgetsForHeight = budgetsForHeight;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByElevatorType")
	public Set<SaleSummary> getSaleSummariesForElevatorType() {
		return this.saleSummariesForElevatorType;
	}

	public void setSaleSummariesForElevatorType(Set<SaleSummary> saleSummariesForElevatorType) {
		this.saleSummariesForElevatorType = saleSummariesForElevatorType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByFreeAdmission")
	public Set<Budget> getBudgetsForFreeAdmission() {
		return this.budgetsForFreeAdmission;
	}

	public void setBudgetsForFreeAdmission(Set<Budget> budgetsForFreeAdmission) {
		this.budgetsForFreeAdmission = budgetsForFreeAdmission;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByMachineBase")
	public Set<SaleSummary> getSaleSummariesForMachineBase() {
		return this.saleSummariesForMachineBase;
	}

	public void setSaleSummariesForMachineBase(Set<SaleSummary> saleSummariesForMachineBase) {
		this.saleSummariesForMachineBase = saleSummariesForMachineBase;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByMachineType")
	public Set<SaleSummary> getSaleSummariesForMachineType() {
		return this.saleSummariesForMachineType;
	}

	public void setSaleSummariesForMachineType(Set<SaleSummary> saleSummariesForMachineType) {
		this.saleSummariesForMachineType = saleSummariesForMachineType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByElectricityType")
	public Set<SaleSummary> getSaleSummariesForElectricityType() {
		return this.saleSummariesForElectricityType;
	}

	public void setSaleSummariesForElectricityType(Set<SaleSummary> saleSummariesForElectricityType) {
		this.saleSummariesForElectricityType = saleSummariesForElectricityType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByAccess")
	public Set<SaleSummary> getSaleSummariesForAccess() {
		return this.saleSummariesForAccess;
	}

	public void setSaleSummariesForAccess(Set<SaleSummary> saleSummariesForAccess) {
		this.saleSummariesForAccess = saleSummariesForAccess;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByFrequency")
	public Set<SaleSummary> getSaleSummariesForFrequency() {
		return this.saleSummariesForFrequency;
	}

	public void setSaleSummariesForFrequency(Set<SaleSummary> saleSummariesForFrequency) {
		this.saleSummariesForFrequency = saleSummariesForFrequency;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByElevatorType")
	public Set<Quotation> getQuotationsForElevatorType() {
		return this.quotationsForElevatorType;
	}

	public void setQuotationsForElevatorType(Set<Quotation> quotationsForElevatorType) {
		this.quotationsForElevatorType = quotationsForElevatorType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataBySpeed")
	public Set<SaleSummary> getSaleSummariesForSpeed() {
		return this.saleSummariesForSpeed;
	}

	public void setSaleSummariesForSpeed(Set<SaleSummary> saleSummariesForSpeed) {
		this.saleSummariesForSpeed = saleSummariesForSpeed;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByHourMachine")
	public Set<SaleSummary> getSaleSummariesForHourMachine() {
		return this.saleSummariesForHourMachine;
	}

	public void setSaleSummariesForHourMachine(Set<SaleSummary> saleSummariesForHourMachine) {
		this.saleSummariesForHourMachine = saleSummariesForHourMachine;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByVoltageLighting")
	public Set<SaleSummary> getSaleSummariesForVoltageLighting() {
		return this.saleSummariesForVoltageLighting;
	}

	public void setSaleSummariesForVoltageLighting(Set<SaleSummary> saleSummariesForVoltageLighting) {
		this.saleSummariesForVoltageLighting = saleSummariesForVoltageLighting;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataBySpeed")
	public Set<Budget> getBudgetsForSpeed() {
		return this.budgetsForSpeed;
	}

	public void setBudgetsForSpeed(Set<Budget> budgetsForSpeed) {
		this.budgetsForSpeed = budgetsForSpeed;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicData")
	public Set<Item> getItems() {
		return this.items;
	}

	public void setItems(Set<Item> items) {
		this.items = items;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "basicDatas")
	public Set<Item> getItems_1() {
		return this.items_1;
	}

	public void setItems_1(Set<Item> items_1) {
		this.items_1 = items_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByCabinDesign")
	public Set<Quotation> getQuotationsForCabinDesign() {
		return this.quotationsForCabinDesign;
	}

	public void setQuotationsForCabinDesign(Set<Quotation> quotationsForCabinDesign) {
		this.quotationsForCabinDesign = quotationsForCabinDesign;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByQuotationType")
	public Set<Quotation> getQuotationsForQuotationType() {
		return this.quotationsForQuotationType;
	}

	public void setQuotationsForQuotationType(Set<Quotation> quotationsForQuotationType) {
		this.quotationsForQuotationType = quotationsForQuotationType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByFloorType")
	public Set<Budget> getBudgetsForFloorType() {
		return this.budgetsForFloorType;
	}

	public void setBudgetsForFloorType(Set<Budget> budgetsForFloorType) {
		this.budgetsForFloorType = budgetsForFloorType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByCabinModel")
	public Set<Quotation> getQuotationsForCabinModel() {
		return this.quotationsForCabinModel;
	}

	public void setQuotationsForCabinModel(Set<Quotation> quotationsForCabinModel) {
		this.quotationsForCabinModel = quotationsForCabinModel;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByDoorSystem")
	public Set<Budget> getBudgetsForDoorSystem() {
		return this.budgetsForDoorSystem;
	}

	public void setBudgetsForDoorSystem(Set<Budget> budgetsForDoorSystem) {
		this.budgetsForDoorSystem = budgetsForDoorSystem;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByMirror")
	public Set<Quotation> getQuotationsForMirror() {
		return this.quotationsForMirror;
	}

	public void setQuotationsForMirror(Set<Quotation> quotationsForMirror) {
		this.quotationsForMirror = quotationsForMirror;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByDoorframeType")
	public Set<Budget> getBudgetsForDoorframeType() {
		return this.budgetsForDoorframeType;
	}

	public void setBudgetsForDoorframeType(Set<Budget> budgetsForDoorframeType) {
		this.budgetsForDoorframeType = budgetsForDoorframeType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByDoorFrameHammered")
	public Set<Quotation> getQuotationsForDoorFrameHammered() {
		return this.quotationsForDoorFrameHammered;
	}

	public void setQuotationsForDoorFrameHammered(Set<Quotation> quotationsForDoorFrameHammered) {
		this.quotationsForDoorFrameHammered = quotationsForDoorFrameHammered;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByControlType")
	public Set<Budget> getBudgetsForControlType() {
		return this.budgetsForControlType;
	}

	public void setBudgetsForControlType(Set<Budget> budgetsForControlType) {
		this.budgetsForControlType = budgetsForControlType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByHeight")
	public Set<Quotation> getQuotationsForHeight() {
		return this.quotationsForHeight;
	}

	public void setQuotationsForHeight(Set<Quotation> quotationsForHeight) {
		this.quotationsForHeight = quotationsForHeight;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByBoothButton")
	public Set<Budget> getBudgetsForBoothButton() {
		return this.budgetsForBoothButton;
	}

	public void setBudgetsForBoothButton(Set<Budget> budgetsForBoothButton) {
		this.budgetsForBoothButton = budgetsForBoothButton;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByFreeAdmission")
	public Set<Quotation> getQuotationsForFreeAdmission() {
		return this.quotationsForFreeAdmission;
	}

	public void setQuotationsForFreeAdmission(Set<Quotation> quotationsForFreeAdmission) {
		this.quotationsForFreeAdmission = quotationsForFreeAdmission;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByBoothDisplay")
	public Set<Budget> getBudgetsForBoothDisplay() {
		return this.budgetsForBoothDisplay;
	}

	public void setBudgetsForBoothDisplay(Set<Budget> budgetsForBoothDisplay) {
		this.budgetsForBoothDisplay = budgetsForBoothDisplay;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByFloorDisplay")
	public Set<Budget> getBudgetsForFloorDisplay() {
		return this.budgetsForFloorDisplay;
	}

	public void setBudgetsForFloorDisplay(Set<Budget> budgetsForFloorDisplay) {
		this.budgetsForFloorDisplay = budgetsForFloorDisplay;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByDoorframeType")
	public Set<Quotation> getQuotationsForDoorframeType() {
		return this.quotationsForDoorframeType;
	}

	public void setQuotationsForDoorframeType(Set<Quotation> quotationsForDoorframeType) {
		this.quotationsForDoorframeType = quotationsForDoorframeType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByFan")
	public Set<Budget> getBudgetsForFan() {
		return this.budgetsForFan;
	}

	public void setBudgetsForFan(Set<Budget> budgetsForFan) {
		this.budgetsForFan = budgetsForFan;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByDoorType")
	public Set<Budget> getBudgetsForDoorType() {
		return this.budgetsForDoorType;
	}

	public void setBudgetsForDoorType(Set<Budget> budgetsForDoorType) {
		this.budgetsForDoorType = budgetsForDoorType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByCabinModel")
	public Set<SaleSummary> getSaleSummariesForCabinModel() {
		return this.saleSummariesForCabinModel;
	}

	public void setSaleSummariesForCabinModel(Set<SaleSummary> saleSummariesForCabinModel) {
		this.saleSummariesForCabinModel = saleSummariesForCabinModel;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByVoltageLighting")
	public Set<Budget> getBudgetsForVoltageLighting() {
		return this.budgetsForVoltageLighting;
	}

	public void setBudgetsForVoltageLighting(Set<Budget> budgetsForVoltageLighting) {
		this.budgetsForVoltageLighting = budgetsForVoltageLighting;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByFrequency")
	public Set<Budget> getBudgetsForFrequency() {
		return this.budgetsForFrequency;
	}

	public void setBudgetsForFrequency(Set<Budget> budgetsForFrequency) {
		this.budgetsForFrequency = budgetsForFrequency;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByHourMachine")
	public Set<Budget> getBudgetsForHourMachine() {
		return this.budgetsForHourMachine;
	}

	public void setBudgetsForHourMachine(Set<Budget> budgetsForHourMachine) {
		this.budgetsForHourMachine = budgetsForHourMachine;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByBuildingType")
	public Set<SaleSummary> getSaleSummariesForBuildingType() {
		return this.saleSummariesForBuildingType;
	}

	public void setSaleSummariesForBuildingType(Set<SaleSummary> saleSummariesForBuildingType) {
		this.saleSummariesForBuildingType = saleSummariesForBuildingType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByElevatorCapacitance")
	public Set<SaleSummary> getSaleSummariesForElevatorCapacitance() {
		return this.saleSummariesForElevatorCapacitance;
	}

	public void setSaleSummariesForElevatorCapacitance(Set<SaleSummary> saleSummariesForElevatorCapacitance) {
		this.saleSummariesForElevatorCapacitance = saleSummariesForElevatorCapacitance;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByMirror")
	public Set<Budget> getBudgetsForMirror() {
		return this.budgetsForMirror;
	}

	public void setBudgetsForMirror(Set<Budget> budgetsForMirror) {
		this.budgetsForMirror = budgetsForMirror;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByRailing")
	public Set<Budget> getBudgetsForRailing() {
		return this.budgetsForRailing;
	}

	public void setBudgetsForRailing(Set<Budget> budgetsForRailing) {
		this.budgetsForRailing = budgetsForRailing;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByButtonType")
	public Set<Budget> getBudgetsForButtonType() {
		return this.budgetsForButtonType;
	}

	public void setBudgetsForButtonType(Set<Budget> budgetsForButtonType) {
		this.budgetsForButtonType = budgetsForButtonType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByRoofType")
	public Set<Budget> getBudgetsForRoofType() {
		return this.budgetsForRoofType;
	}

	public void setBudgetsForRoofType(Set<Budget> budgetsForRoofType) {
		this.budgetsForRoofType = budgetsForRoofType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByCabinDesign")
	public Set<Budget> getBudgetsForCabinDesign() {
		return this.budgetsForCabinDesign;
	}

	public void setBudgetsForCabinDesign(Set<Budget> budgetsForCabinDesign) {
		this.budgetsForCabinDesign = budgetsForCabinDesign;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByManeuverType")
	public Set<Budget> getBudgetsForManeuverType() {
		return this.budgetsForManeuverType;
	}

	public void setBudgetsForManeuverType(Set<Budget> budgetsForManeuverType) {
		this.budgetsForManeuverType = budgetsForManeuverType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByHallButton")
	public Set<Budget> getBudgetsForHallButton() {
		return this.budgetsForHallButton;
	}

	public void setBudgetsForHallButton(Set<Budget> budgetsForHallButton) {
		this.budgetsForHallButton = budgetsForHallButton;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByBoothButton")
	public Set<SaleSummary> getSaleSummariesForBoothButton() {
		return this.saleSummariesForBoothButton;
	}

	public void setSaleSummariesForBoothButton(Set<SaleSummary> saleSummariesForBoothButton) {
		this.saleSummariesForBoothButton = saleSummariesForBoothButton;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByBoothDisplay")
	public Set<SaleSummary> getSaleSummariesForBoothDisplay() {
		return this.saleSummariesForBoothDisplay;
	}

	public void setSaleSummariesForBoothDisplay(Set<SaleSummary> saleSummariesForBoothDisplay) {
		this.saleSummariesForBoothDisplay = saleSummariesForBoothDisplay;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByFloorDisplay")
	public Set<SaleSummary> getSaleSummariesForFloorDisplay() {
		return this.saleSummariesForFloorDisplay;
	}

	public void setSaleSummariesForFloorDisplay(Set<SaleSummary> saleSummariesForFloorDisplay) {
		this.saleSummariesForFloorDisplay = saleSummariesForFloorDisplay;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByDoorFrameHammered")
	public Set<SaleSummary> getSaleSummariesForDoorFrameHammered() {
		return this.saleSummariesForDoorFrameHammered;
	}

	public void setSaleSummariesForDoorFrameHammered(Set<SaleSummary> saleSummariesForDoorFrameHammered) {
		this.saleSummariesForDoorFrameHammered = saleSummariesForDoorFrameHammered;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicData")
	public Set<BasicData> getBasicDatas() {
		return this.basicDatas;
	}

	public void setBasicDatas(Set<BasicData> basicDatas) {
		this.basicDatas = basicDatas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByDoorframeType")
	public Set<SaleSummary> getSaleSummariesForDoorframeType() {
		return this.saleSummariesForDoorframeType;
	}

	public void setSaleSummariesForDoorframeType(Set<SaleSummary> saleSummariesForDoorframeType) {
		this.saleSummariesForDoorframeType = saleSummariesForDoorframeType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByHeight")
	public Set<SaleSummary> getSaleSummariesForHeight() {
		return this.saleSummariesForHeight;
	}

	public void setSaleSummariesForHeight(Set<SaleSummary> saleSummariesForHeight) {
		this.saleSummariesForHeight = saleSummariesForHeight;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByFreeAdmission")
	public Set<SaleSummary> getSaleSummariesForFreeAdmission() {
		return this.saleSummariesForFreeAdmission;
	}

	public void setSaleSummariesForFreeAdmission(Set<SaleSummary> saleSummariesForFreeAdmission) {
		this.saleSummariesForFreeAdmission = saleSummariesForFreeAdmission;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByControlType")
	public Set<SaleSummary> getSaleSummariesForControlType() {
		return this.saleSummariesForControlType;
	}

	public void setSaleSummariesForControlType(Set<SaleSummary> saleSummariesForControlType) {
		this.saleSummariesForControlType = saleSummariesForControlType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByHallButton")
	public Set<SaleSummary> getSaleSummariesForHallButton() {
		return this.saleSummariesForHallButton;
	}

	public void setSaleSummariesForHallButton(Set<SaleSummary> saleSummariesForHallButton) {
		this.saleSummariesForHallButton = saleSummariesForHallButton;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByFloorDisplay")
	public Set<Quotation> getQuotationsForFloorDisplay() {
		return this.quotationsForFloorDisplay;
	}

	public void setQuotationsForFloorDisplay(Set<Quotation> quotationsForFloorDisplay) {
		this.quotationsForFloorDisplay = quotationsForFloorDisplay;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByBuildingType")
	public Set<Budget> getBudgetsForBuildingType() {
		return this.budgetsForBuildingType;
	}

	public void setBudgetsForBuildingType(Set<Budget> budgetsForBuildingType) {
		this.budgetsForBuildingType = budgetsForBuildingType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByBoothDisplay")
	public Set<Quotation> getQuotationsForBoothDisplay() {
		return this.quotationsForBoothDisplay;
	}

	public void setQuotationsForBoothDisplay(Set<Quotation> quotationsForBoothDisplay) {
		this.quotationsForBoothDisplay = quotationsForBoothDisplay;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByElevatorType")
	public Set<Budget> getBudgetsForElevatorType() {
		return this.budgetsForElevatorType;
	}

	public void setBudgetsForElevatorType(Set<Budget> budgetsForElevatorType) {
		this.budgetsForElevatorType = budgetsForElevatorType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByControlType")
	public Set<Quotation> getQuotationsForControlType() {
		return this.quotationsForControlType;
	}

	public void setQuotationsForControlType(Set<Quotation> quotationsForControlType) {
		this.quotationsForControlType = quotationsForControlType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByElevatorCapacitance")
	public Set<Budget> getBudgetsForElevatorCapacitance() {
		return this.budgetsForElevatorCapacitance;
	}

	public void setBudgetsForElevatorCapacitance(Set<Budget> budgetsForElevatorCapacitance) {
		this.budgetsForElevatorCapacitance = budgetsForElevatorCapacitance;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByDoorFrameHammered")
	public Set<Budget> getBudgetsForDoorFrameHammered() {
		return this.budgetsForDoorFrameHammered;
	}

	public void setBudgetsForDoorFrameHammered(Set<Budget> budgetsForDoorFrameHammered) {
		this.budgetsForDoorFrameHammered = budgetsForDoorFrameHammered;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByMachineType")
	public Set<Budget> getBudgetsForMachineType() {
		return this.budgetsForMachineType;
	}

	public void setBudgetsForMachineType(Set<Budget> budgetsForMachineType) {
		this.budgetsForMachineType = budgetsForMachineType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByAccess")
	public Set<Budget> getBudgetsForAccess() {
		return this.budgetsForAccess;
	}

	public void setBudgetsForAccess(Set<Budget> budgetsForAccess) {
		this.budgetsForAccess = budgetsForAccess;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByMachineType")
	public Set<Quotation> getQuotationsForMachineType() {
		return this.quotationsForMachineType;
	}

	public void setQuotationsForMachineType(Set<Quotation> quotationsForMachineType) {
		this.quotationsForMachineType = quotationsForMachineType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByHallButton")
	public Set<Quotation> getQuotationsForHallButton() {
		return this.quotationsForHallButton;
	}

	public void setQuotationsForHallButton(Set<Quotation> quotationsForHallButton) {
		this.quotationsForHallButton = quotationsForHallButton;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByCabinModel")
	public Set<Budget> getBudgetsForCabinModel() {
		return this.budgetsForCabinModel;
	}

	public void setBudgetsForCabinModel(Set<Budget> budgetsForCabinModel) {
		this.budgetsForCabinModel = budgetsForCabinModel;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByElectricityType")
	public Set<Budget> getBudgetsForElectricityType() {
		return this.budgetsForElectricityType;
	}

	public void setBudgetsForElectricityType(Set<Budget> budgetsForElectricityType) {
		this.budgetsForElectricityType = budgetsForElectricityType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByManeuverType")
	public Set<Quotation> getQuotationsForManeuverType() {
		return this.quotationsForManeuverType;
	}

	public void setQuotationsForManeuverType(Set<Quotation> quotationsForManeuverType) {
		this.quotationsForManeuverType = quotationsForManeuverType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByMachineBase")
	public Set<Budget> getBudgetsForMachineBase() {
		return this.budgetsForMachineBase;
	}

	public void setBudgetsForMachineBase(Set<Budget> budgetsForMachineBase) {
		this.budgetsForMachineBase = budgetsForMachineBase;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataBySpeed")
	public Set<Quotation> getQuotationsForSpeed() {
		return this.quotationsForSpeed;
	}

	public void setQuotationsForSpeed(Set<Quotation> quotationsForSpeed) {
		this.quotationsForSpeed = quotationsForSpeed;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "basicDataByElevatorCapacitance")
	public Set<Quotation> getQuotationsForElevatorCapacitance() {
		return this.quotationsForElevatorCapacitance;
	}

	public void setQuotationsForElevatorCapacitance(Set<Quotation> quotationsForElevatorCapacitance) {
		this.quotationsForElevatorCapacitance = quotationsForElevatorCapacitance;
	}

}
